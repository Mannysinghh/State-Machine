/*
 *     SocialLedge.com - Copyright (C) 2013
 *
 *     This file is part of free software framework for embedded processors.
 *     You can use it and/or distribute it as long as this copyright header
 *     remains unmodified.  The code is free for personal use and requires
 *     permission to use in a commercial product.
 *
 *      THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
 *      OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
 *      MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
 *      I SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
 *      CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
 *
 *     You can reach the author of this software at :
 *          p r e e t . w i k i @ g m a i l . c o m
 */

/**
 * @file
 * @brief This is the application entry point.
 */


#include <stdio.h>
#include "utilities.h"  // delay_ms()
#include "io.hpp"       // board IO
#include "stdlib.h"
#include "gpio.hpp"
#include "lpc_pwm.hpp"

typedef enum{
    start,
    light_sensor,
    temp_fan,
    motion_sensor,
    dead
}state_machine_t;

int main(void)
{
    state_machine_t currentState = start;


    while(1)
    {
        delay_ms(100);

        bool switch1_pressed = SW.getSwitch(1);
        bool switch2_pressed = SW.getSwitch(2);
        bool switch3_pressed = SW.getSwitch(3);
        bool switch4_pressed = SW.getSwitch(4);

        printf("Press button 0 to START.\n");

        switch(currentState)
        {
            case start:
                if(switch1_pressed)
                {
                    LE.on(1); LE.off(1);
                    LE.on(2);LE.off(2);
                    LE.on(3);LE.off(3);
                    LE.on(4);LE.off(4);

                    LE.on(4); LE.off(4);
                    LE.on(3);LE.off(3);
                    LE.on(2);LE.off(2);
                    LE.on(1);LE.off(1);

                    currentState = light_sensor;
                }
            break;

            case light_sensor:

                if(switch2_pressed)
                {
                    printf("Current State: START. Press button 1 to go to TEMP_FAN.\n");
                    int light_value = LS.getRawValue();
                    if(light_value < 3)
                    {
                        GPIO pin20(P1_20);
                        pin20.setAsOutput();

                        pin20.setLow();

                        delay_ms(100);
                        pin20.setHigh();


                        printf("Flashing lights");
                        currentState = temp_fan;
                    }
                }
            break;

            case temp_fan:

                printf("Current State: LIGHT_SENSOR. Press button 2 to go to MOTION_SENSOR.\n");
                int temp;
                temp = TS.getFarenheit();
                /* Use 1Khz PWM.  Each PWM shares the 1st frequency you set */
                PWM motor1(PWM::pwm1, 1000); //frequency?

                if(temp > 50)
                {
                    // body not complete
                    /* Set to 50% motor speed */
                    motor1.set(50);
                }

                if(temp > 72)
                {
                    //increase the fan speed
                    motor1.set(75);
                }

                if(temp < 72 && temp > 50)
                {
                    //decrease the fan speed
                    motor1.set(25);
                }

                if(switch3_pressed)
                {
                    LE.on(1);
                    currentState = light_sensor;
                    LE.off(1);
                }
                else if(switch3_pressed)
                {
                    LE.on(2);
                    currentState = motion_sensor;
                    LE.off(2);
                }
            break;

            case motion_sensor:

                float x = AS.getX();
                float y = AS.getY();

                x = ((x + 1024)/2048)*100;
                y = ((x + 1024)/2048)*100;

                if(x < 49)
                {
                    //turn on LED strip 1 (left side)
                }
                else if(x > 51)
                {
                    //turn on LED strip 2 (right side)
                }
                else if(y < 49)
                {
                    //turn on LED strip 3 (bottom)
                }
                else if(y > 51)
                {
                    //turn on LED strip 4 (top)
                }

                if(switch2_pressed)
                {
                    currentState = light_sensor;
                }

                if(switch3_pressed)
                {
                    currentState = temp_fan;
                }

                if(switch4_pressed)
                {
                    currentState = dead;
                }
                break;

            case dead:
                
                if(switch4_pressed)
                {

                    exit(0);
                }
                break;
                
            default:
                
                printf("State machine error");
            break;
        }
    }
}

